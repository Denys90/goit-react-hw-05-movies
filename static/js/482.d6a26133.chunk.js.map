{"version":3,"file":"static/js/482.d6a26133.chunk.js","mappings":"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","sources":["components/API/fetchNameMovie.js","components/Muvie/Container.js","components/Muvie/MovieInfo.jsx","Pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nasync function fetchNameMovie(query) {\n  const options = {\n    method: 'GET',\n    url: `https://api.themoviedb.org/3/movie/${query}`,\n    params: { language: 'en-US' },\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyZWVlY2IwZTM1N2IwNzY4OTc3M2U3N2E2ZjY2ODNkNiIsInN1YiI6IjY1NDM2YjMwZTFhZDc5MDEyYzkxMWMwNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nNMftaRxeM-ZOVuw351-nkshf1rZNko2qstg9NtH3yg',\n    },\n  };\n\n  try {\n    const response = await axios(options);\n    return response;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport default fetchNameMovie;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.main`\n  margin: auto;\n  width: 1000px;\n  padding: 20px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  display: block;\n\n  background-color: rgba(205, 214, 219, 0.2);\n`;\nexport const Section = styled.section`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const ImageContainer = styled.div`\n  img {\n    width: 300px;\n    height: 400px;\n    border-radius: 5px;\n  }\n`;\nexport const GenresList = styled.ul`\n  display: flex;\n  gap: 10px;\n  color: #cfcaca;\n`;\nexport const Score = styled.p`\n  display: block;\n  padding-bottom: 10px;\n`;\nexport const MovieDetailsContainer = styled.div`\n  flex: 1;\n  margin-left: 20px;\n\n  h1 {\n    color: #cfcaca;\n    font-size: 24px;\n    margin-bottom: 10px;\n  }\n\n  p {\n    color: #cfcaca;\n    margin: 0;\n  }\n\n  ul {\n    list-style: none;\n    padding: 0;\n    margin: 10px 0;\n\n    li {\n      margin-bottom: 5px;\n    }\n  }\n`;\nexport const InfoContainer = styled.div`\n  flex: 1;\n\n  h2 {\n    font-size: 18px;\n    margin-bottom: 10px;\n    color: #cfcaca;\n  }\n\n  ul {\n    list-style: none;\n    padding: 0;\n\n    li {\n      margin-bottom: 5px;\n    }\n  }\n`;\nexport const LinkStyled = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  transition: color 0.3s;\n  text-decoration: none;\n  color: #cfcaca;\n  &:hover {\n    color: #007bff;\n    transition: 0.3s;\n  }\n`;\n\nexport const GoToBack = styled(NavLink)`\n  text-decoration: none;\n  color: #cfcaca;\n  display: flex;\n  align-items: center;\n  padding-bottom: 10px;\n\n  :hover {\n    transition: 0.3s;\n    color: #007bff;\n  }\n`;\n","import { useLocation, Outlet } from 'react-router-dom';\nimport { Suspense, useRef } from 'react';\nimport { FaLongArrowAltRight } from 'react-icons/fa';\nimport { FaChevronLeft } from 'react-icons/fa';\nimport {\n  Container,\n  Section,\n  ImageContainer,\n  MovieDetailsContainer,\n  InfoContainer,\n  GenresList,\n  Score,\n  LinkStyled,\n  GoToBack,\n} from './Container';\n\nconst MovieInfo = ({ oneMovie }) => {\n  const location = useLocation();\n  const backlinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  const { poster_path, title, overview, popularity, release_date } = oneMovie;\n  const DEFAULT_POSTER_PATH = 'https://via.placeholder.com/92';\n  const dateString = release_date;\n  const dateObject = new Date(dateString);\n  const year = dateObject.getFullYear();\n\n  return (\n    <Container>\n      <GoToBack to={backlinkLocationRef.current}>\n        <FaChevronLeft />\n        Go to back!\n      </GoToBack>\n      <Section>\n        <ImageContainer>\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : DEFAULT_POSTER_PATH\n            }\n            alt={title}\n            width={300}\n            height={400}\n          />\n        </ImageContainer>\n        <MovieDetailsContainer>\n          <h1>\n            {title}({year})\n          </h1>\n          <Score>\n            <b>User Score:</b> {Math.round(popularity / 10)}%\n          </Score>\n          <p>\n            <b>Overview: </b> {overview}\n          </p>\n          <GenresList>\n            <b>Genres:</b>\n            {oneMovie.genres &&\n              oneMovie.genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n          </GenresList>\n        </MovieDetailsContainer>\n      </Section>\n      <InfoContainer>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <LinkStyled to=\"cast\">\n              Cast...\n              <FaLongArrowAltRight />\n            </LinkStyled>\n          </li>\n          <li>\n            <LinkStyled to=\"reviews\">\n              Reviews...\n              <FaLongArrowAltRight />\n            </LinkStyled>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading subpage....</div>}>\n          <Outlet />\n        </Suspense>\n      </InfoContainer>\n    </Container>\n  );\n};\nexport default MovieInfo;\n","import fetchNameMovie from '../components/API/fetchNameMovie';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MovieInfo from '../components/Muvie/MovieInfo';\n\nconst MovieDetails = () => {\n  const [oneMovie, setOneMovie] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchOneMovie = async () => {\n      try {\n        const response = await fetchNameMovie(movieId);\n        setOneMovie(response.data);\n      } catch (error) {\n        throw error;\n      }\n    };\n    fetchOneMovie();\n  }, [movieId]);\n  return <MovieInfo oneMovie={oneMovie} />;\n};\nexport default MovieDetails;\n"],"names":["_fetchNameMovie","_asyncToGenerator","_regeneratorRuntime","_callee","query","options","response","_context","prev","next","method","url","concat","params","language","headers","accept","Authorization","axios","sent","abrupt","t0","stop","apply","arguments","_x","Container","styled","_templateObject","_taggedTemplateLiteral","Section","_templateObject2","ImageContainer","_templateObject3","GenresList","_templateObject4","Score","_templateObject5","MovieDetailsContainer","_templateObject6","InfoContainer","_templateObject7","LinkStyled","NavLink","_templateObject8","GoToBack","_templateObject9","_ref","_location$state$from","_location$state","oneMovie","location","useLocation","backlinkLocationRef","useRef","state","from","poster_path","title","overview","popularity","release_date","year","Date","getFullYear","_jsxs","children","to","current","_jsx","FaChevronLeft","src","alt","width","height","Math","round","genres","map","genre","name","id","FaLongArrowAltRight","Suspense","fallback","Outlet","_useState","useState","_useState2","_slicedToArray","setOneMovie","movieId","useParams","useEffect","fetchOneMovie","fetchNameMovie","data","MovieInfo"],"sourceRoot":""}