{"version":3,"file":"static/js/674.8327081f.chunk.js","mappings":"sPAEwB,SAAAA,IAgBvB,OAhBuBA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAxB,SAAAC,EAAyBC,GAAO,IAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAU7B,OATKJ,EAAU,CACdK,OAAQ,MACRC,IAAI,sCAADC,OAAwCR,EAAO,YAClDS,OAAQ,CAAEC,SAAU,SACpBC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAELV,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAGwBS,EAAAA,EAAAA,GAAMb,GAAS,KAAD,EAAvB,OAARC,EAAQC,EAAAY,KAAAZ,EAAAa,OAAA,SACPd,GAAQ,OAAAC,EAAAC,KAAA,EAAAD,EAAAc,GAAAd,EAAA,kCAAAA,EAAAe,OAAA,GAAAnB,EAAA,mBAElBoB,MAAA,KAAAC,UAAA,CACD,MAnB0B,SAEFC,GAAA,OAAAzB,EAAAuB,MAAC,KAADC,UAAA,E,SC6CxB,EA3Ca,WACX,IAAAE,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACdxB,GAAY4B,EAAAA,EAAAA,MAAZ5B,SAER6B,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,eAAAC,GAAAlC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAiC,EAAAC,EAAA,OAAAnC,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEI6B,EAAUlC,GAAS,KAAD,EAAAgC,EAAA7B,EAAAY,KAAjCkB,EAAID,EAAJC,KAERN,EAASM,EAAKE,MAAMhC,EAAAE,KAAA,sBAAAF,EAAAC,KAAA,EAAAD,EAAAc,GAAAd,EAAA,SAAAA,EAAAc,GAAA,yBAAAd,EAAAe,OAAA,GAAAnB,EAAA,kBAIvB,kBARmB,OAAAgC,EAAAZ,MAAA,KAAAC,UAAA,KAUpBU,GACF,GAAG,CAAC9B,IAGJ,OACEoC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SACGZ,EAAMa,KAAI,SAAAJ,GAAI,OACbK,EAAAA,EAAAA,MAAA,MAAAF,SAAA,CACGH,EAAKM,cACJL,EAAAA,EAAAA,KAAA,OACEM,IAAG,kCAAAlC,OAAoC2B,EAAKM,cAC5CE,IAAG,GAAAnC,OAAK2B,EAAKS,KAAI,eAGnBR,EAAAA,EAAAA,KAAA,OAAKM,IAZW,kCAYeC,IAAKR,EAAKS,QAE3CJ,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAIH,EAAKS,QACTR,EAAAA,EAAAA,KAAA,KAAAE,SAAIH,EAAKU,iBAXJV,EAAKW,QAaT,OAKf,C","sources":["components/API/fetchCast.js","components/Reviews/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nasync function fetchCast(movieId) {\n  const options = {\n    method: 'GET',\n    url: `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n    params: { language: 'en-US' },\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyZWVlY2IwZTM1N2IwNzY4OTc3M2U3N2E2ZjY2ODNkNiIsInN1YiI6IjY1NDM2YjMwZTFhZDc5MDEyYzkxMWMwNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nNMftaRxeM-ZOVuw351-nkshf1rZNko2qstg9NtH3yg',\n    },\n  };\n\n  try {\n    const response = await axios(options);\n    return response;\n  } catch (error) {}\n}\nexport default fetchCast;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport fetchCast from '../API/fetchCast';\n\nconst Cast = () => {\n  const [casts, setCasts] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchNameCasts = async () => {\n      try {\n        const { data } = await fetchCast(movieId);\n\n        setCasts(data.cast);\n      } catch (error) {\n        throw error;\n      }\n    };\n\n    fetchNameCasts();\n  }, [movieId]);\n\n  const DEFAULT_POSTER_PATH = 'https://via.placeholder.com/200';\n  return (\n    <>\n      <ul>\n        {casts.map(cast => (\n          <li key={cast.cast_id}>\n            {cast.profile_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w200${cast.profile_path}`}\n                alt={`${cast.name} profile`}\n              />\n            ) : (\n              <img src={DEFAULT_POSTER_PATH} alt={cast.name} />\n            )}\n            <div>\n              <p>{cast.name}</p>\n              <p>{cast.character}</p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["_fetchCast","_asyncToGenerator","_regeneratorRuntime","_callee","movieId","options","response","_context","prev","next","method","url","concat","params","language","headers","accept","Authorization","axios","sent","abrupt","t0","stop","apply","arguments","_x","_useState","useState","_useState2","_slicedToArray","casts","setCasts","useParams","useEffect","fetchNameCasts","_ref","_yield$fetchCast","data","fetchCast","cast","_jsx","_Fragment","children","map","_jsxs","profile_path","src","alt","name","character","cast_id"],"sourceRoot":""}