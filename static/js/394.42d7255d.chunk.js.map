{"version":3,"file":"static/js/394.42d7255d.chunk.js","mappings":"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","sources":["components/API/fetchKeyword.js","components/SubmitForm/SubmitForm.jsx","components/RenderList/RenderList.jsx","components/Movies/MoviesSearch.jsx","Pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nasync function fetchKeyword(query) {\n  const options = {\n    method: 'GET',\n    url: 'https://api.themoviedb.org/3/search/movie',\n    params: {\n      query,\n      include_adult: 'false',\n      language: 'en-US',\n      page: '1',\n    },\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyZWVlY2IwZTM1N2IwNzY4OTc3M2U3N2E2ZjY2ODNkNiIsInN1YiI6IjY1NDM2YjMwZTFhZDc5MDEyYzkxMWMwNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nNMftaRxeM-ZOVuw351-nkshf1rZNko2qstg9NtH3yg',\n    },\n  };\n\n  try {\n    const response = await axios(options);\n    return response;\n  } catch (error) {}\n}\n\nexport default fetchKeyword;\n","import { useState } from 'react';\n// import { useSearchParams } from 'react-router-dom';\n\n// ===========================================================>\nconst SubmitForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n  // const [searchParams, setSearchParams] = useSearchParams();\n  // ===========================================================>\n  // const movieId = searchParams.get('movieId') ?? '';\n\n  // ===========================================================>\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n    setQuery('');\n  };\n  // ===========================================================>\n  // const updateQueryString = e => {\n  //   const movieIdValue = e.target.value;\n  //   if (movieIdValue === '') {\n  //     return setSearchParams({});\n  //   }\n  //   setSearchParams({ movieId: movieIdValue });\n  //   setQuery(movieIdValue);\n  // };\n  const updateQueryString = e => {\n    setQuery(e.target.value);\n  };\n  // ===========================================================>\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={query}\n        onChange={updateQueryString}\n        placeholder=\"Search movie \"\n      ></input>\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SubmitForm;\n","import { Link, useLocation } from 'react-router-dom';\n\nconst RenderList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies &&\n        movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\nexport default RenderList;\n","import { useCallback, useState, useEffect } from 'react';\nimport fetchKeyword from '../API/fetchKeyword';\nimport SubmitForm from 'components/SubmitForm/SubmitForm';\nimport RenderList from '../RenderList/RenderList';\n\nconst MoviesSearch = () => {\n  const [queryValue, setQueryValue] = useState('');\n  const [movies, setMovies] = useState([]);\n  // ============================================>\n  const fetchmoviesKeyWord = useCallback(async () => {\n    if (!queryValue) return;\n\n    try {\n      const response = await fetchKeyword(queryValue);\n      setMovies(prevState => [...prevState, ...response.data.results]);\n    } catch (error) {\n      throw error;\n    }\n  }, [queryValue]);\n  // ============================================>\n  useEffect(() => {\n    if (queryValue) {\n      fetchmoviesKeyWord();\n    }\n  }, [queryValue, fetchmoviesKeyWord]);\n\n  // ============================================>\n  const handleSearchSubmit = query => {\n    if (queryValue !== query) {\n      setQueryValue(query);\n    }\n  };\n  // ============================================>\n  return (\n    <>\n      <SubmitForm onSubmit={handleSearchSubmit} />\n      <RenderList movies={movies} />\n    </>\n  );\n};\nexport default MoviesSearch;\n","import MoviesSearch from '..//components/Movies/MoviesSearch';\n\nconst Movies = () => {\n  return (\n    <>\n      <MoviesSearch />\n    </>\n  );\n};\nexport default Movies;\n"],"names":["_fetchKeyword","_asyncToGenerator","_regeneratorRuntime","_callee","query","options","response","_context","prev","next","method","url","params","include_adult","language","page","headers","accept","Authorization","axios","sent","abrupt","t0","stop","apply","arguments","_x","_ref","onSubmit","_useState","useState","_useState2","_slicedToArray","setQuery","_jsxs","e","preventDefault","children","_jsx","type","value","onChange","target","placeholder","movies","location","useLocation","map","movie","Link","to","concat","id","state","from","title","queryValue","setQueryValue","_useState3","_useState4","setMovies","fetchmoviesKeyWord","useCallback","fetchKeyword","prevState","_toConsumableArray","data","results","useEffect","_Fragment","SubmitForm","RenderList","MoviesSearch"],"sourceRoot":""}