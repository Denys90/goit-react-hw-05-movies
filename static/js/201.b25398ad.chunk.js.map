{"version":3,"file":"static/js/201.b25398ad.chunk.js","mappings":"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","sources":["components/API/fetchKeyword.js","components/SubmitForm/Form.js","components/SubmitForm/SubmitForm.jsx","components/RenderList/RenderList.jsx","components/Movies/MoviesSearch.jsx","Pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nasync function fetchKeyword(query) {\n  const options = {\n    method: 'GET',\n    url: 'https://api.themoviedb.org/3/search/movie',\n    params: {\n      query,\n      include_adult: 'false',\n      language: 'en-US',\n      page: '1',\n    },\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyZWVlY2IwZTM1N2IwNzY4OTc3M2U3N2E2ZjY2ODNkNiIsInN1YiI6IjY1NDM2YjMwZTFhZDc5MDEyYzkxMWMwNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nNMftaRxeM-ZOVuw351-nkshf1rZNko2qstg9NtH3yg',\n    },\n  };\n\n  try {\n    const response = await axios(options);\n    return response;\n  } catch (error) {}\n}\n\nexport default fetchKeyword;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  input {\n    padding-left: 10px;\n    font: inherit;\n    font-size: 18px;\n    color: #ddd6d6;\n    border-radius: 5px;\n    width: 400px;\n    height: 40px;\n    border: none;\n    background-color: rgba(205, 214, 219, 0.2);\n    ::placeholder {\n      padding-left: 10px;\n      font: inherit;\n      font-size: 18px;\n      color: #ddd6d6;\n    }\n    :focus,\n    :hover {\n      outline: none;\n    }\n  }\n  button {\n    color: #ddd6d6;\n    position: absolute;\n    left: 1135px;\n    height: 40px;\n    outline: none;\n    padding: 0;\n    margin: 0;\n    border: 0;\n    background-color: rgba(205, 214, 219, 0);\n    cursor: pointer;\n\n    :hover {\n      transform: scale(1.5);\n      color: white;\n      opacity: 1;\n    }\n  }\n`;\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Form } from './Form';\nimport { BsSearch } from 'react-icons/bs';\n\n// ===========================================================>\nconst SubmitForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  // ===========================================================>\n  const movieId = searchParams.get('movieId') ?? '';\n\n  // ===========================================================>\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n    setSearchParams({ movieId: '' });\n  };\n  // ===========================================================>\n  const updateQueryString = e => {\n    const movieIdValue = e.target.value;\n    if (movieIdValue === '') {\n      return setSearchParams({});\n    } else {\n      setSearchParams({ movieId: movieIdValue });\n    }\n    setQuery(movieIdValue);\n  };\n  // ===========================================================>\n  return (\n    <Form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={movieId}\n        onChange={updateQueryString}\n        placeholder=\"Search movie \"\n      ></input>\n      <button type=\"submit\">\n        <BsSearch />\n      </button>\n    </Form>\n  );\n};\n\nexport default SubmitForm;\n","import { Link, useLocation } from 'react-router-dom';\n\nconst RenderList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies &&\n        movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\nexport default RenderList;\n","import { useCallback, useState, useEffect } from 'react';\nimport fetchKeyword from '../API/fetchKeyword';\nimport SubmitForm from 'components/SubmitForm/SubmitForm';\nimport RenderList from '../RenderList/RenderList';\n\nconst MoviesSearch = () => {\n  const [queryValue, setQueryValue] = useState('');\n  const [movies, setMovies] = useState([]);\n  // ============================================>\n  const fetchmoviesKeyWord = useCallback(async () => {\n    if (!queryValue) return;\n\n    try {\n      const response = await fetchKeyword(queryValue);\n      if (response.data.total_results === 0) {\n        return alert(`Sorry, we didn't find any results for ${queryValue}.`);\n      }\n      setMovies(response.data.results);\n    } catch (error) {\n      throw error;\n    }\n  }, [queryValue]);\n  // ============================================>\n  useEffect(() => {\n    if (queryValue) {\n      fetchmoviesKeyWord();\n    }\n  }, [queryValue, fetchmoviesKeyWord]);\n\n  // ============================================>\n  const handleSearchSubmit = query => {\n    if (queryValue !== query) {\n      setQueryValue(query);\n    }\n  };\n  // ============================================>\n  return (\n    <>\n      <SubmitForm onSubmit={handleSearchSubmit} />\n      <RenderList movies={movies} />\n    </>\n  );\n};\nexport default MoviesSearch;\n","import MoviesSearch from '..//components/Movies/MoviesSearch';\n\nconst Movies = () => {\n  return (\n    <>\n      <MoviesSearch />\n    </>\n  );\n};\nexport default Movies;\n"],"names":["_fetchKeyword","_asyncToGenerator","_regeneratorRuntime","_callee","query","options","response","_context","prev","next","method","url","params","include_adult","language","page","headers","accept","Authorization","axios","sent","abrupt","t0","stop","apply","arguments","_x","Form","styled","_templateObject","_taggedTemplateLiteral","_ref","_searchParams$get","onSubmit","_useState","useState","_useState2","_slicedToArray","setQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","movieId","get","_jsxs","e","preventDefault","children","_jsx","type","value","onChange","movieIdValue","target","placeholder","BsSearch","movies","location","useLocation","map","movie","Link","to","concat","id","state","from","title","queryValue","setQueryValue","_useState3","_useState4","setMovies","fetchmoviesKeyWord","useCallback","fetchKeyword","data","total_results","alert","results","useEffect","_Fragment","SubmitForm","RenderList","MoviesSearch"],"sourceRoot":""}