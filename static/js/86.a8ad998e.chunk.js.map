{"version":3,"file":"static/js/86.a8ad998e.chunk.js","mappings":"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","sources":["components/API/fetchKeyword.js","components/SubmitForm/Form.js","components/SubmitForm/SubmitForm.jsx","Pages/Movies.jsx","components/RenderList/SectionMovies.js","components/RenderList/StyledLink.js","components/RenderList/RenderList.jsx"],"sourcesContent":["import axios from 'axios';\n\nasync function fetchKeyword(query) {\n  const options = {\n    method: 'GET',\n    url: 'https://api.themoviedb.org/3/search/movie',\n    params: {\n      query,\n      include_adult: 'false',\n      language: 'en-US',\n      page: '1',\n    },\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyZWVlY2IwZTM1N2IwNzY4OTc3M2U3N2E2ZjY2ODNkNiIsInN1YiI6IjY1NDM2YjMwZTFhZDc5MDEyYzkxMWMwNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nNMftaRxeM-ZOVuw351-nkshf1rZNko2qstg9NtH3yg',\n    },\n  };\n\n  try {\n    const response = await axios(options);\n    return response;\n  } catch (error) {}\n}\n\nexport default fetchKeyword;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  input {\n    padding-left: 10px;\n    font: inherit;\n    font-size: 18px;\n    color: #ddd6d6;\n    border-radius: 5px;\n    width: 400px;\n    height: 40px;\n    border: none;\n    background-color: rgba(205, 214, 219, 0.2);\n    ::placeholder {\n      padding-left: 10px;\n      font: inherit;\n      font-size: 18px;\n      color: #ddd6d6;\n    }\n    :focus,\n    :hover {\n      outline: none;\n    }\n  }\n  button {\n    color: #ddd6d6;\n    position: absolute;\n    left: 1135px;\n    height: 40px;\n    outline: none;\n    padding: 0;\n    margin: 0;\n    border: 0;\n    background-color: rgba(205, 214, 219, 0);\n    cursor: pointer;\n\n    :hover {\n      transform: scale(1.5);\n      color: white;\n      opacity: 1;\n    }\n  }\n`;\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Form } from './Form';\nimport { BsSearch } from 'react-icons/bs';\n\n// ===========================================================>\nconst SubmitForm = ({ onSubmit }) => {\n  const [queryInput, setQueryInput] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  // ===========================================================>\n  const query = searchParams.get('query') ?? '';\n\n  // ===========================================================>\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(queryInput);\n    setSearchParams({});\n  };\n  // ===========================================================>\n  const updateQueryString = e => {\n    const queryVelue = e.target.value;\n    if (queryVelue === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: queryVelue });\n    setQueryInput(queryVelue);\n  };\n  // ===========================================================>\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={updateQueryString}\n          placeholder=\"Search movie \"\n        ></input>\n        <button type=\"submit\">\n          <BsSearch />\n        </button>\n      </Form>\n    </>\n  );\n};\n\nexport default SubmitForm;\n","import { useCallback, useState, useEffect } from 'react';\nimport fetchKeyword from '../components/API/fetchKeyword';\nimport RenderList from '../components/RenderList/RenderList';\nimport SubmitForm from '../components/SubmitForm/SubmitForm';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [queryValue, setQueryValue] = useState('');\n  // ============================================>\n  const fetchmoviesKeyWord = useCallback(async () => {\n    if (!queryValue) return;\n\n    try {\n      const response = await fetchKeyword(queryValue);\n      if (response.data.total_results === 0) {\n        return alert(`Sorry, we didn't find any results for ${queryValue}.`);\n      }\n      setMovies(response.data.results);\n    } catch (error) {\n      throw error;\n    }\n  }, [queryValue]);\n  // ============================================>\n  useEffect(() => {\n    if (queryValue) {\n      fetchmoviesKeyWord();\n    }\n  }, [queryValue, fetchmoviesKeyWord]);\n  // ============================================>\n  const handleSearchSubmit = query => {\n    if (queryValue !== query) {\n      setQueryValue(query);\n    }\n  };\n  // ============================================>\n  return (\n    <>\n      <SubmitForm onSubmit={handleSearchSubmit} />\n      <RenderList movies={movies} />\n    </>\n  );\n};\nexport default Movies;\n","import styled from '@emotion/styled';\n\nexport const SectionMovies = styled.section`\n  margin: 20px 0;\n  display: inline-flexbox;\n  justify-content: center;\n  text-align: center;\n\n  ul {\n    margin-left: 560px;\n    width: 800px;\n    border-radius: 5px;\n    background-color: rgba(205, 214, 219, 0.2);\n    list-style: none;\n    padding: 0;\n  }\n\n  li {\n    font-size: 16px;\n    padding: 10px;\n    margin: 5px 0;\n    color: #cfcaca;\n\n    cursor: pointer;\n    transition: background-color 0.3s;\n    :hover {\n      background-color: rgba(205, 214, 219, 0.2);\n    }\n  }\n`;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { SectionMovies } from '../RenderList/SectionMovies';\nimport { StyledLink } from '../RenderList/StyledLink';\n\nconst RenderList = ({ movies }) => {\n  const location = useLocation();\n  const filteredMovies = movies.filter(movie => movie.title);\n  return (\n    <SectionMovies>\n      <ul>\n        {filteredMovies.map(movie => (\n          <StyledLink\n            key={movie.id}\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n          >\n            <li id={movie.id}>{movie.title}</li>\n          </StyledLink>\n        ))}\n      </ul>\n    </SectionMovies>\n  );\n};\nexport default RenderList;\n"],"names":["_fetchKeyword","_asyncToGenerator","_regeneratorRuntime","_callee","query","options","response","_context","prev","next","method","url","params","include_adult","language","page","headers","accept","Authorization","axios","sent","abrupt","t0","stop","apply","arguments","_x","Form","styled","_templateObject","_taggedTemplateLiteral","_ref","_searchParams$get","onSubmit","_useState","useState","_useState2","_slicedToArray","queryInput","setQueryInput","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","_jsx","_Fragment","children","_jsxs","e","preventDefault","type","value","onChange","queryVelue","target","placeholder","BsSearch","movies","setMovies","_useState3","_useState4","queryValue","setQueryValue","fetchmoviesKeyWord","useCallback","fetchKeyword","data","total_results","alert","concat","results","useEffect","SubmitForm","RenderList","SectionMovies","StyledLink","NavLink","location","useLocation","filteredMovies","filter","movie","title","map","to","id","state","from"],"sourceRoot":""}